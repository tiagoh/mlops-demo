variables:
  ml-workspace-connection: 'aml-workspace-connection'
  ml-workspace-name: 'tmvh-westeurope'
  ml-workspace-rg: 'tiagoh_main_RG'
  ml-compute-name: 'train-cluster'
  ml-experiment-name: 'german-credit-basic-ci'
  ml-dataset-name: 'german_credit_dataset'
  ml-model-name: 'german-credit-basic-model'
  ml-model-filename: 'credit-prediction.pkl'
  ml-model-path: 'models/german-credit-basic'
  ml-script-arguments: --DATASET_NAME $(ml-dataset-name) --MODEL_NAME $(ml-model-filename)

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - $(ml-model-path)
    exclude:
    - README.md

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: AzureCLI@2
    displayName: 'Install AML CLI'
    inputs:
      azureSubscription: $(ml-workspace-connection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az extension add -n azure-cli-ml

  - task: AzureCLI@2
    displayName: 'Train and explain model'
    inputs:
      azureSubscription: $(ml-workspace-connection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      workingDirectory: $(ml-model-path)
      inlineScript: |
        az ml run submit-script \
        --resource-group $(ml-workspace-rg) \
        --workspace-name $(ml-workspace-name) \
        --conda-dependencies train-config/conda_train.yml \
        --ct $(ml-compute-name) \
        --experiment-name $(ml-experiment-name) \
        --output-metadata-file $(Build.ArtifactStagingDirectory)/run.json \
        train.py \
        $(ml-script-arguments)

  - task: AzureCLI@2
    displayName: 'Register model'
    inputs:
      azureSubscription: $(ml-workspace-connection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      workingDirectory: $(ml-model-path)
      inlineScript: |
        az ml model register \
        --resource-group $(ml-workspace-rg) \
        --workspace-name $(ml-workspace-name) \
        --run-metadata-file $(Build.ArtifactStagingDirectory)/run.json \
        --output-metadata-file $(Build.ArtifactStagingDirectory)/model.json \
        --property git-repo-url=$(Build.Repository.Uri) \
        --property git-commit-id=$(Build.SourceVersion) \
        --asset-path outputs/$(ml-model-filename) \
        --experiment-name $(ml-experiment-name) \
        --name $(ml-model-name)

  - task: CopyFiles@2
    displayName: 'Copy deployment configs'
    inputs:
      SourceFolder: '$(ml-model-path)/inference-config'
      Contents: '*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: CopyFiles@2
    displayName: 'Copy Python code'
    inputs:
      SourceFolder: '$(ml-model-path)'
      Contents: '**/*.py'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish run and details'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'model-artifacts'
      publishLocation: 'Container'